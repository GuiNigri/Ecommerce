// <auto-generated />
using System;
using EcommercePrestige.Data.Ecommerce.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EcommercePrestige.Data.Migrations
{
    [DbContext(typeof(EcommerceContext))]
    [Migration("20200804011209_AlteracaoUsuarioModel")]
    partial class AlteracaoUsuarioModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EcommercePrestige.Model.Entity.EmpresaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cnae")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeOtica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmpresaModel");
                });

            modelBuilder.Entity("EcommercePrestige.Model.Entity.KitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ValorVenda")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("KitsModel");
                });

            modelBuilder.Entity("EcommercePrestige.Model.Entity.MarcaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MarcaModel");
                });

            modelBuilder.Entity("EcommercePrestige.Model.Entity.MaterialModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaterialModel");
                });

            modelBuilder.Entity("EcommercePrestige.Model.Entity.PedidoKitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KitModelId")
                        .HasColumnType("int");

                    b.Property<int>("PedidoModelId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("float");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("KitModelId");

                    b.HasIndex("PedidoModelId");

                    b.ToTable("PedidoKitModel");
                });

            modelBuilder.Entity("EcommercePrestige.Model.Entity.PedidoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime2");

                    b.Property<double>("Desconto")
                        .HasColumnType("float");

                    b.Property<string>("FormaDePagamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parcelas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rastreio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("Subtotal")
                        .HasColumnType("float");

                    b.Property<int>("UsuarioModelId")
                        .HasColumnType("int");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioModelId");

                    b.ToTable("PedidoModel");
                });

            modelBuilder.Entity("EcommercePrestige.Model.Entity.PedidoProdutosModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PedidoModelId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoCorModelId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("float");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PedidoModelId");

                    b.HasIndex("ProdutoCorModelId");

                    b.ToTable("PedidoProdutosModel");
                });

            modelBuilder.Entity("EcommercePrestige.Model.Entity.ProdutoCorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estoque")
                        .HasColumnType("int");

                    b.Property<bool>("PedidoBasic")
                        .HasColumnType("bit");

                    b.Property<bool>("PedidoGold")
                        .HasColumnType("bit");

                    b.Property<bool>("PedidoSilver")
                        .HasColumnType("bit");

                    b.Property<int>("ProdutoModelId")
                        .HasColumnType("int");

                    b.Property<string>("Rgb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusAtivacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoModelId");

                    b.ToTable("ProdutosCorModel");
                });

            modelBuilder.Entity("EcommercePrestige.Model.Entity.ProdutoFotoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Principal")
                        .HasColumnType("bit");

                    b.Property<int>("ProdutoCorModelId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoModelId")
                        .HasColumnType("int");

                    b.Property<string>("StatusAtivacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UriBlob")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoCorModelId");

                    b.HasIndex("ProdutoModelId");

                    b.ToTable("ProdutosFotoModel");
                });

            modelBuilder.Entity("EcommercePrestige.Model.Entity.ProdutoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BestSeller")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Liquidacao")
                        .HasColumnType("bit");

                    b.Property<int>("MarcaModelId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialModelId")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusAtivacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tamanho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ValorVenda")
                        .HasColumnType("float");

                    b.Property<bool>("Vitrine")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MarcaModelId");

                    b.HasIndex("MaterialModelId");

                    b.ToTable("ProdutosModel");
                });

            modelBuilder.Entity("EcommercePrestige.Model.Entity.SuporteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Cnpj")
                        .HasColumnType("bit");

                    b.Property<bool>("Cpf")
                        .HasColumnType("bit");

                    b.Property<string>("DocumentoUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mensagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SuporteModel");
                });

            modelBuilder.Entity("EcommercePrestige.Model.Entity.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BloqueioAutomatico")
                        .HasColumnType("bit");

                    b.Property<bool>("BloqueioManual")
                        .HasColumnType("bit");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Verificado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("UsuarioModel");
                });

            modelBuilder.Entity("EcommercePrestige.Model.Entity.PedidoKitModel", b =>
                {
                    b.HasOne("EcommercePrestige.Model.Entity.KitModel", "KitModel")
                        .WithMany()
                        .HasForeignKey("KitModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommercePrestige.Model.Entity.PedidoModel", "PedidoModel")
                        .WithMany()
                        .HasForeignKey("PedidoModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EcommercePrestige.Model.Entity.PedidoModel", b =>
                {
                    b.HasOne("EcommercePrestige.Model.Entity.UsuarioModel", "UsuarioModel")
                        .WithMany()
                        .HasForeignKey("UsuarioModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EcommercePrestige.Model.Entity.PedidoProdutosModel", b =>
                {
                    b.HasOne("EcommercePrestige.Model.Entity.PedidoModel", "PedidoModel")
                        .WithMany("ListaDeProdutos")
                        .HasForeignKey("PedidoModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommercePrestige.Model.Entity.ProdutoCorModel", "ProdutoCorModel")
                        .WithMany()
                        .HasForeignKey("ProdutoCorModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EcommercePrestige.Model.Entity.ProdutoCorModel", b =>
                {
                    b.HasOne("EcommercePrestige.Model.Entity.ProdutoModel", "ProdutoModel")
                        .WithMany()
                        .HasForeignKey("ProdutoModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EcommercePrestige.Model.Entity.ProdutoFotoModel", b =>
                {
                    b.HasOne("EcommercePrestige.Model.Entity.ProdutoCorModel", "ProdutoCorModel")
                        .WithMany()
                        .HasForeignKey("ProdutoCorModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommercePrestige.Model.Entity.ProdutoModel", "ProdutoModel")
                        .WithMany()
                        .HasForeignKey("ProdutoModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EcommercePrestige.Model.Entity.ProdutoModel", b =>
                {
                    b.HasOne("EcommercePrestige.Model.Entity.MarcaModel", "MarcaModel")
                        .WithMany()
                        .HasForeignKey("MarcaModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommercePrestige.Model.Entity.MaterialModel", "MaterialModel")
                        .WithMany()
                        .HasForeignKey("MaterialModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
